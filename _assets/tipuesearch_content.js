var tipuesearch = {"pages": [{"title":"Samuel S. Watson","text":"Samuel S. Watson I am the Director of Graduate Studies in the Data Science Initiative at Brown University. I am a mathematician by training and an educational technologist at heart. Most of my work is aimed at making mathematical and statistical ideas accessible and fun. I teach DATA 1010 at Brown and develop Prismia and Data Gymnasia. If you're interested in checking out these technologies, I recommend the Prismia lesson Machine Learning with Mathlets as a starting point. In that lesson, you'll work up an exploration involving this interactive figure (which illustrates a neural network):","tags":"","url":"/"},
{"title":"About","text":"About Contact Office 361 164 Angell Street sswatson@brown.edu Website This website was generated using the Julia-based static site generator Franklin.","tags":"","url":"/about/"},
{"title":"Getting a CVS COVID-19 Vaccination Appointment","text":"Getting a CVS COVID-19 Vaccination Appointment If you want to get a COVID-19 vaccination appointment at CVS, it doesn't really work to just go to the website and book the soonest available time. You'll get a message saying that they're fully booked. To get an appointment, you basically have to check frequently or get lucky. Fortunately, the task of refreshing and checking a webpage can be automated in a pretty straightforward way. Here are step-by-step instructions for doing that on the CVS COVID website. Go to the CVS COVID-19 vaccination page. Find a state with available appointments and go through the process of entering your information. Even if you start with the wrong state, you will be able to change states during this sequence (thanks to Aimée Birnbaum for pointing out this trick). The last step here is the one where you enter you zip code. After entering your zip code, open your browser console. In your console, paste Notification.requestPermission() and press enter. Approve notifications when the browser asks. In your console, paste setInterval( () => document .getElementsByClassName(search-icon)[0] .click(), 60000 ) and press enter. Several seconds later, paste setInterval( () => !document .documentElement .innerHTML .includes(sorry) && new Notification(Check CVS page), 60000) into your console and press enter. Then as long as you leave that browser window open, you'll get a Desktop notification if the search returns results that don't include the word sorry. At that point, you can select and book your appointment. P.S. It isn't a good habit to paste Javascript from random places into your console, but in this case the code is hopefully simple enough that you can't be pretty confident it isn't doing anything malicious.","tags":"","url":"/blog/2021-03-08/"},
{"title":"DATA 1010: Introduction to Probability, Statistics, and Machine Learning","text":"DATA 1010: Introduction to Probability, Statistics, and Machine Learning Resources Syllabus Learning resources Course text volume I Course text volume II [code] Cheatsheet of course concepts A Julia-Python-R cheatsheet Learning standards Calendar Additional reading list Class September 5 (linear algebra and programming) [solutions video] September 7 (more linear algebra and programming) [solutions video] September 10 (linear algebra and SVD) [solutions video] September 12 (determinants and matrix differentiation) [solutions video] [jupyter] September 14 (machine arithmetic) [solution] September 17 (numerical error) [solution] September 19 (pseudorandom number generators, automatic differentiation) [solution] September 21 (gradient descent, review) [solution] September 24 (probability spaces) [solution] September 26 (counting and random variables) [solution] September 28 (conditional probability and independence) [solution] October 1 (conditional probability) [solution] October 3 (review) [solution] October 5 (expectation) [solution] October 10 (linearity of expectation) [solution] October 12 (continuous distributions) [solution] October 15 (conditional expectation) [solution] October 17 (more continuous distributions, Bernoulli and binomial distributions) [solution] October 19 (geometric, Poisson, exponential distributions) [solution] October 22 (multivariate normal distribution) [solution] October 24 (law of large numbers and CLT) [solution] October 26 (CLT and multivariate CLT) [solution] October 29 (Kernel density estimation) [solution] October 31 (Kernel density estimation, review) [solution] November 2 (Nonparametric regression) [solution] November 5 (intro to classification, QDA) [solution] November 7 (classification, LDA, Naive Bayes) [solution] November 9 (logistic regression) [solution] November 12 (support vector classification) [solution] November 14 (kernelization for SVM, neural nets) [November 17 – December 10] (neural nets, dimension reduction, likelihood ratio classification, intro to R, ggplot2, dplyr, point estimation, confidence intervals, empirical CDF convergence, maximum likelihood estimation, hypothesis testing) December 12 (geographic maps in ggplot2, and logistic regression using caret) Homework PSet 1 - September 14 (linear algebra, SVD) PSet 2 - September 21 (matrix differentiation, machine arithmetic, PRNGs) PSet 3 - September 28 (automatic differentiation, gradient descent, probability, review problems) PSet 4 - October 5 (review problems, probability) PSet 5 - October 12 (expectation) PSet 6 - October 19 (continuous distributions, conditional expectation) PSet 7 - October 26 [files] (common distributions, central limit theorem) PSet 8 - November 02 (probability review) PSet 9 - November 09 (kernel density estimation, nonparametric regression, classification) PSet 10 - November 16 (logistic regression, support vector machines, neural nets) PSet 11 - November 30 (dimension reduction, likelihood ratio classification, data visualization and manipulation) PSet 12 - December 17 (point estimation, confidence intervals, bootstrap, and maximum likelihood estimation) Videos Linear algebra overview Eigenvectors and SVD Determinants and matrix differentiation Machine arithmetic Numerical error PRNGs, autodiff, and gradient descent Probability models Conditional probability Exams Practice Midterm I Practice Midterm II Practice Midterm III Practice Final Animations Neural net forward propagation Neural net convergence Singular value decomposition Hard-margin SVM Logistic regression convergence Links Piazza page Gradescope page Julia setup instructions Jupyter setup tips","tags":"","url":"/classes/data1010/"},
{"title":"no title","text":"","tags":"","url":"/classes/data1010/calendar/"},
{"title":"no title","text":"","tags":"","url":"/classes/data1010/calendar/demos/agenda-views/"},
{"title":"no title","text":"","tags":"","url":"/classes/data1010/calendar/demos/background-events/"},
{"title":"no title","text":"","tags":"","url":"/classes/data1010/calendar/demos/basic-views/"},
{"title":"no title","text":"","tags":"","url":"/classes/data1010/calendar/demos/default/"},
{"title":"Draggable Events","text":"","tags":"","url":"/classes/data1010/calendar/demos/external-dragging/"},
{"title":"no title","text":"","tags":"","url":"/classes/data1010/calendar/demos/gcal/"},
{"title":"no title","text":"","tags":"","url":"/classes/data1010/calendar/demos/json/"},
{"title":"no title","text":"","tags":"","url":"/classes/data1010/calendar/demos/list-views/"},
{"title":"no title","text":"","tags":"","url":"/classes/data1010/calendar/demos/locales/"},
{"title":"no title","text":"","tags":"","url":"/classes/data1010/calendar/demos/selectable/"},
{"title":"no title","text":"","tags":"","url":"/classes/data1010/calendar/demos/themes/"},
{"title":"no title","text":"","tags":"","url":"/classes/data1010/calendar/demos/timezones/"},
{"title":"no title","text":"","tags":"","url":"/classes/data1010/calendar/demos/week-numbers/"},
{"title":"Learning Resources for DATA 1010","text":"Learning Resources for DATA 1010 Primary resources edX. We have deployed the book for this class as a private edX course. Allow plenty of time to work through the material and think carefully about the problems. Pre-class videos. Watch an expository video on the material for each day on YouTube (linked from the main course page). These videos are deliberately fast-paced so you can use them for a high-level summary or review, but for that reason you should expect to make generous use of the pause button. Be prepared to watch a video multiple times to reinforce your learning. Class time. Come to class prepared to engage, ask questions, and learn as much as possible. Homework. Complete each homework question with the goal of understanding it thoroughly. Reflect on the principles you used to solve the question, how you recognized which principles would be useful, and the bigger picture the problem is trying to illuminate. If you sense that there are some things you aren't completely grasping, please attend office hours or the MRC (see last two items below) for more conversation. When the solutions are posted after the deadline, read them to learn details you might have missed when you solved the problem yourself. Instructor and TA office hours. Students often find that office hours are extremely helpful. You do not have to have any pressing needs to attend office hours: you are welcome to come to chat about the course or go over problems you feel you already mostly understand or whatever. If you feel you have some kind of hangup about coming to office hours, you should come once merely for the sake of clearing that hurdle. Piazza. Ask questions (including anonymously) on the course Piazza page. Your fellow students. Collaboration on solving homework problems is encouraged (though the final write-up must still be your own!), because you can learn a lot from working through problems with one another. Secondary resources Cheat sheet. A list of bullets points with takeaways from each lesson is available here. This document is helpful for refreshing your memory on the most important concepts before you tackle the homework, and it's also helpful for identifying examinable content. Other Books. The edX content is not designed to be encyclopedic. It is intended to be concise and approachable, with the goal of cultivating a robust understanding of the basic ideas. For a more comprehensive of advanced treatment, see Sheldon Ross's A First Course in Probability, Larry Wasserman's All of Statistics, and Pattern Recognition and Machine Learning by Christopher Bishop. For review of linear algebra and numerical computation, see the Deep Learning book by Goodfellow, Bengio, and Courville. 3Blue1Brown videos. 3Blue1Brown is the YouTube moniker of a person who has made some conceptually lucid and graphically stunning explanatory math videos, including a whole series on linear algebra. These videos are quite short and will provide you with some really valuable geometric intuition. These mental models are much more readily conveyed with the kinds of rich animation tools 3b1b is using. Highly recommended for the covered topics (just the vector stuff)","tags":"","url":"/classes/data1010/coursesuccess/"},
{"title":"Jupyter setup","text":"Jupyter setup You can leave a Jupyter server running in the background on your machine, and this allows you to interact with Jupyter as though it were a website (except even better, since it doesn't depend on an internet connection). This saves time opening the terminal and waiting for Jupyter to boot, but it also saves package loading time. These instructions should work on macOS and Linux. On Windows, you would have to install a third-party tool to set a process running in the background (or you could just leave the Terminal window minimized). Open a Terminal session and run screen jupyter lab (I prefer Jupyter Lab, though you can do this with Jupyter Notebook instead). Hold Ctrl and press a, then release and press d. This detaches the screen session so you can safely close the Terminal window without terminating the process. Save the URL as a bookmark in your browser. If (eventually) you want to kill the Jupyter process, you can open the Terminal and run screen -r to reattach the process. Then you can Ctrl-c as usual to kill it.","tags":"","url":"/classes/data1010/jupyter-setup/"},
{"title":"no title","text":"","tags":"","url":"/classes/data1010/pdf/data1010-learning/"},
{"title":"no title","text":"","tags":"","url":"/classes/data1010/pdf/nn-3d/"},
{"title":"Julia setup","text":"Julia setup Download You can download Julia from http://julialang.org/downloads. I recommend Julia 1.0.1 for this class. Also, use the standard download link you see on that page, rather than JuliaPro or any other distribution. Julia and Python If you have Anaconda installed on your machine, you will want to point the IJulia and PyCall packages to your Anaconda executables so that it doesn't install its own versions (replace sswatson with your own username on your machine–-also, you will want to check that you have Anaconda installed in the same place I do). You have to re-build the packages after updating the ENV dictionary. Step 1. Find your Anaconda Python executable. Launch an Anaconda Python session and from within that session run import sys sys.executable Make note of this path. Step 2. Find your Jupyter executable. On a Mac, run which jupyter from a Terminal session get the path of your Jupyter executable. It's probably somewhere like /Users/sswatson/anaconda3/bin/jupyter. On Windows, it's probably somewhere like C:/Users/sswatson/Anaconda3/Scripts/jupyter. You can check this by starting Command Prompt, typing cd Ana and pressing tab to see if it autocompletes to cd Anaconda3. Then start typing Scripts and hit tab again to see that it completes to Scripts. Step 3. Download Julia and run the following from a Julia session. Replace the Jupyter and Python paths below with what you found in Steps 1 and 2. using Pkg ENV[JUPYTER] = /Users/sswatson/anaconda3/bin/jupyter Pkg.build(IJulia) ENV[PYTHON] = /Users/sswatson/anaconda3/bin/python Pkg.build(PyCall) Step 4. We will also be using the Plots package and a few others, so you can go ahead and run Pkg.add(Plots) Pkg.add(Images) Pkg.add(Colors) If you don't install these now, you can install them later. Troubleshooting If you have any trouble with the above installation, here are some tips: If you're having trouble with a package, you can try rebuilding it by doing Pkg.build(PackageName), and you can also Pkg.rm(PackageName); Pkg.add(PackageName) to remove it and add it back. Do using PyCall; PyCall.python to see which Python executable your installation is using. You want it to be in a directory with Anaconda3 or anaconda3 in the path string. If your error message includes something about GR, you might need to rebuild your GR package or use PyPlot instead (these are both backends for Plots, meaning that they are used to generate the figures corresponding to your Plots commands). To rebuild GR, try Pkg.update(); ENV[GRDIR] = ; Pkg.build(GR). To switch to PyPlot, try Pkg.add(PyPlot); Pkg.add(LaTeXStrings); using Plots; pyplot(). Try googling the error message. Other folks have probably had similar issues, and sometimes the fix is pretty easy. If you have Windows 7, there are instructions on the downloads page for stuff you have to do for Julia to work. One of these is the Windows Management Framework, which is necessary for Julia to be able to download binaries for its packages. Getting started You should complete the Programming in Julia edX module to get oriented. startup.jl If you don't want to have to run using Statistics, LinearAlgebra in every session, you can put these lines in your startup.jl file. The code in this file is loaded every time you run Julia. The instructions below are for macOS/Linux. The same idea applies if you're using Windows, but the navigation commands are different. The basic idea is to put a startup.jl file in ~/.julia/config/, where ~ represents whatever the home directory is on your system. Open a Terminal session Run cd ~/.julia/ Run ls to see if there is a config folder already there. If not, make one with mkdir config. Run cd config Run emacs startup.jl to create a startup.jl file and open an editor to put content into it. Type using Statistics, LinearAlgebra and then save the file with Ctrl-x Ctrl-s (hold control and press x, then release and press s) Close the editor with Ctrl-x Ctrl-c","tags":"","url":"/classes/data1010/setup/"},
{"title":"DATA 2040: Introduction to Probability, Statistics, and Machine Learning","text":"DATA 2040: Introduction to Probability, Statistics, and Machine Learning Resources Official course website Lecture notes Concept summary sheet","tags":"","url":"/classes/data2040/"},
{"title":"Math 0190: Advanced Placement Calculus (Physics/Engineering) ","text":"Math 0190: Advanced Placement Calculus (Physics/Engineering) Instructors Instructors: Samuel S. Watson and Laura Walton TAs: Zhiyuan Zhang and David Ha Exams Midterm I Midterm I topics list Midterm I practice exam [solutions] Midterm I [solutions] Midterm II Midterm II topics list Midterm II practice exam [solutions] Midterm II [solutions] Final Exams Makeup midterms I II Practice Final [solutions] Final topics list Extra practice with Fourier DE problems Final Exam Solutions Course documents Learning resources for Math 19 Syllabus Course Notes Homework Homework 1 [solutions] Homework 2 [solutions] Homework 3 [solutions] Homework 4 [solutions] Homework 5 [solutions] Homework 6 [solutions] Homework 7 [solutions] Homework 8 [solutions] Homework 9 [solutions] Homework 10 [solutions] Homework 11 [solutions] Quizzes Quiz 1 [solutions] Quiz 2 [solutions] Quiz 3 [solutions] Quiz 4 [solutions] Quiz 5 [solutions] Quiz 6 [solutions] Quiz 7 [solutions] Quiz 8 [solutions] Quiz 9 [solutions] Recitation Worksheets Week 6 [solutions] Week 7 [solutions] Week 8 [solutions] Week 9 [solutions] Week 10 [solutions] Week 11 [solutions]","tags":"","url":"/classes/math0190/"},
{"title":"Math 0190","text":"Math 0190 Learning Resources for Math 19 Class time. Come to class prepared to engage and ask questions. If you find the lectures too fast, consider reading the next few pages in the notes in advance. Recitation. Take advantage of the opportunity to work with your fellow students and get help from the TA. The recitaion problems will help you get a head start on the skills covered on the upcoming homework. Homework. Complete each homework question with the goal of understanding it thoroughly. Reflect on the principles you used to solve the question, how you recognized which principles would be useful, and the bigger picture the problem is trying to illuminate. If you sense that there are some things you aren't completely grasping, please attend office hours or the MRC (see last two items below) for more conversation. Quizzes. Every week you'll be quizzed on the homework you just completed. If you struggle to complete the quiz problems on time, take that as an indication that you should strive to learn the material more thoroughly while doing the homework. This might mean you need to solve additional problems (see the next three items). Course notes. The course notes are formatted in the style of a textbook, but they are more informal and less comprehensive. Therefore, despite any misgivings you might have about your ability to learn mathematics from a printed page, this is an excellent opportunity for you to develop that skill. Reading the notes allows you to absorb the concepts at your own pace, which can be extremely valuable. There are also a couple extra pratice problem per section that you may wish to do in addition to your homework problems. Laura's notes. Laura's notes and mine cover the some topics but often use different examples. So her notes are a good resource if you want to see additional examples and/or a slightly different presentation. Also her handwriting is way better than mine. Gilbert Strang's book. This book is available for free online, and it includes most of the topics we'll cover this semester. The book offers a more complete presentation than the one you'll get in class, and it is a good source of many additional exercises. You can find the appropriate section in the table of contents or using Nathan Pflueger's topics schedule from the 2014 edition of Math 19. Nathan Pflueger's problem sets This course parallels the course from two years ago closely enough that the problem sets (and practice exams) on that website will provide helpful additional practice. Solutions are also available. Office hours. The course staff members' office hours are listed on the course page, and any Math 19 student is welcome to attend anyone's office hours. You do not have to have any pressing needs to attend office hours: you are welcome to come to chat about the course or go over problems you feel you already mostly understand or whatever. Your fellow students. Collaboration on solving homework problems is encouraged (though the final write-up must still be your own!), because you can learn a lot from working through problems with one another. Math Resource Center. The department provides learning support for a variety of undergraduate courses at Brown, including Math 19. Place & time: Foxboro Auditorium in the math department, 8 PM to 10 PM Monday through Thursday. Tutoring. The office of co-curricular advising offers free group/individual tutoring on a weekly basis, which you sign up for in advance. The department also has a list of graduate students available for private tutoring (though that tends to be expensive). SageMath. This part is purely optional, but you can experiment with graphs of functions, check your integration, etc. using Sage. You can run Sage code directly in your browser without installing anything at SageMathCell, and you can get started learning how to use it here. You really can do plenty of things that are helpful in this course (graphing, differentiating, integrating, taking limits) with no prior coding experience.","tags":"","url":"/classes/math0190/coursesuccess/"},
{"title":"Math 0350: Multivariable Calculus","text":"Math 0350: Multivariable Calculus Course documents Syllabus Calendar Learning resources Course text Multivariable Calculus for Brown Honors Calculus students [light version (~8 MB)] [with interactive 3D graphics (~40 MB)] Concepts list [142 KB] Exams Midterm 2015 Brown Math 0200 Exam I [solution] 2015 MIT Interphase Exam I [solution] Practice midterm [solution] Midterm [solution] Final Practice Final [solution] Final Exam solutions Problem Sets Gradescope 1 [solution] Gradescope 2 [solution] Gradescope 3 [solution] Gradescope 4 [solution] Gradescope 5 [solution] Gradescope 6 [solution] Gradescope 7 [solution] Gradescope 8 [solution] Gradescope 9 [solution] Gradescope 10 [solution] Gradescope 11 [solution] Lecture videos Thursday, 07 September 2017 [1] Tuesday, 12 September 2017 [1] [2] Thursday, 14 September 2017 [1] [2] Tuesday, 19 September 2017 [1] [2] Thursday, 21 September 2017 [1] [2] Tuesday, 26 September 2017 [1] Thursday, 28 September 2017 [1] Tuesday, 03 October 2017 [1] Thursday, 05 October 2017 [1] Tuesday, 10 October 2017 [1] Thursday, 12 October 2017 [1] Tuesday, 17 October 2017 [1] Review Session [1] Tuesday, 24 October 2017 [1] Thursday, 26 October 2017 [1] Tuesday, 31 October 2017 [1] Thursday, 2 November 2017 [1] Tuesday, 7 November 2017 [1] [2] Thursday, 9 November 2017 [1] Tuesday, 14 November 2017 [1] Thursday, 16 November 2017 [1] Tuesday, 21 November 2017 [1] Tuesday, 28 November 2017 [1] Thursday, 30 November 2017 [1] Tuesday, 5 December 2017 [1] Thursday, 7 December 2017 [1] Review Session I [1] Review Session II [1] Getting Started Take the syllabus quiz iClicker Cloud WeBWork Gradescope","tags":"","url":"/classes/math0350/"},
{"title":"Learning Resources for Math 0350","text":"Learning Resources for Math 0350 Final Exam Preparation WeBWork final practice (available on WW or through Canvas) Practice final The final exam for Oliver Knill's course at Harvard (solutions included, also 15 excellent practice finals with solutions(!)). Skip anything about differential equations Concepts list General Resources Class time. Come to class prepared to engage and ask questions. You will retain the material much better if it isn't totally unfamiliar the first time you see it in class. Book. The book is concise and will get you directly to the main ideas Other Books. These notes and this online book 3Blue1Brown videos. 3Blue1Brown is the YouTube moniker of a person who has made some conceptually lucid and graphically stunning explanatory math videos, including a whole series on linear algebra. These videos are quite short and will provide you with some really valuable geometric intuition. These mental models are much more readily conveyed with the kinds of rich animation tools 3b1b is using. Highly recommended for the covered topics (mostly linear algebra, as well as a neural networks video) Cheat sheet. A list of each week's learning objectives, including a quick recap of the most important concepts, is available here. This document is helpful for refreshing your memory on the most important concepts before you tackle the homework, and it's also helpful for identifying examinable content. Homework. Complete each homework question with the goal of understanding it thoroughly. Reflect on the principles you used to solve the question, how you recognized which principles would be useful, and the bigger picture the problem is trying to illuminate. If you sense that there are some things you aren't completely grasping, please attend office hours or the MRC (see last two items below) for more conversation. Office hours. Students often find that office hours are extremely helpful. You do not have to have any pressing needs to attend office hours: you are welcome to come to chat about the course or go over problems you feel you already mostly understand or whatever. If you feel you have some kind of hangup about coming to office hours, you should come once merely for the sake of clearing that hurdle. Your fellow students. Collaboration on solving homework problems is encouraged (though the final write-up must still be your own!), because you can learn a lot from working through problems with one another. Math Resource Center. The department provides learning support for a variety of undergraduate courses at Brown, including Math 0200 (which is close enough to Math 0350). Place & time: Foxboro Auditorium in the math department, 8 PM to 10 PM Monday through Thursday. Tutoring. The office of co-curricular advising offers free group/individual tutoring on a weekly basis, which you sign up for in advance. The department also has a list of graduate students available for private tutoring (though that tends to be expensive).","tags":"","url":"/classes/math0350/coursesuccess/"},
{"title":"Gradescope","text":"Gradescope In this course students will submit homework using Gradescope. Here are the steps to sign up and submit your homework. Go to http://www.gradescope.com Select Sign up for free Select I am a student Use the course entry code MGE5DD, your name (first name and last name), your @brown.edu email address, and your Banner ID (which is on your student ID and looks like B12345678) to sign up Select Math 0350 Select the appropriate homework assignment Select Upload PDF and upload a PDF with your homework in it. It is important that you upload the entire homework packet, which includes space for you to write your answers to each question, as well as some spillover space at the end. If you complete your homework on paper, see this guide for help with scanning using your phone (also, the library has scanners). Alternatively, you can import the PDF in a tablet app (e.g., GoodNotes for iPad), complete the homework in digital handwriting, and export directly to PDF. Click the Save button at the bottom of the page Please bear in mind that the grader will have to read your work on their computer screen. This means that you need to make sure that your scan is of a reasonable quality. You should position the camera so that the page fills the screen, you should make sure the camera focuses properly, and you should use an actual scanning app (do not use straight-up photos! scanners and scanning apps apply some processing that makes your handwriting much more legible).","tags":"","url":"/classes/math0350/gradescope/"},
{"title":"iClicker Cloud","text":"iClicker Cloud We will be using iClicker Cloud software in this course. I will ask questions regularly throughout class, and you can submit responses using a smartphone or laptop. Your score will be based mostly on participation: 15 points for answering almost all of the questions (you can decline to answer at most one) per class, plus 1 point for each correct answer. Follow these instructions (edit: the link that was here is now broken). One of the instructions refers to the location of a particular assignment within Canvas. This is in the Assignments tab under iClicker cloud. That's it!","tags":"","url":"/classes/math0350/iclicker/"},
{"title":"no title","text":"This lecture video is missing due to a recording error.","tags":"","url":"/classes/math0350/missing/"},
{"title":"WeBWorK","text":"WeBWorK In this course students will complete online homework using WeBWork. Here are the steps to sign up and submit your homework. Fill out this Google form Wait 24 hours, during which time your instructor will add you to the course Visit the MAA-hosted course WeBWork site (update: link no longer working) and login using your full Brown email address as your username and your Banner ID as your password. Please change your password after you log in. With the above setup complete, you can access and will submit these homework sets through Canvas. You'll visit the Canvas site, select the Assignments tab, and select the current WeBWork assignment there. The window will open right inside your Canvas page.","tags":"","url":"/classes/math0350/webwork/"},
{"title":"Math 0520: Introductory Linear Algebra","text":"Math 0520: Introductory Linear Algebra Course documents Summary of learning objectives [printable] Learning resources for Math 520 A little set theory Guide to Writing Proofs Syllabus Class notes and videos Topic Notes Videos Linear Systems Th 01/26 Vectors and Matrices Tu 01/31 Th 02/02 [3b1b] Applications, Linear independence Tu 02/07 Th 02/09 Linear transformations Tu 02/14 Th 02/16 [3b1b] [3b1b] [3b1b] Matrix Inverses [break] Th 02/23 [3b1b] Linear subspaces Tu 02/28 [review] [3b1b] Determinants Tu 03/07 Th 03/09 [3b1b] Abstract Vector Spaces Tu 03/14 Th 03/16 [ssw] [ssw] [ssw] Basis and Dimension Tu 03/21 Th 03/23 [ssw] [ssw] [ssw] [ssw] Change of basis and eigenvectors Tu 04/04 Th 04/06 [3b1b] [ssw] [ssw] [ssw] [ssw] Diagonalization Tu 04/11 Th 04/13 [ssw] [ssw] [ssw] [ssw] Complex eigenvalues and Inner products Tu 04/18 Th 04/20 [ssw] [ssw] [ssw] [ssw] Orthogonal Projection, Gram Schmidt, Least Squares Approximation Th 04/25 Th 04/27 [ssw] [ssw] [ssw] [ssw] [review] [review] [ssw] [ssw] [ssw] [ssw] Homework problems Homework 1 [solution] Homework 2 [solution] Homework 3 [solution] Homework 4 [solution] Homework 5 [solution] Homework 6 [solution] Homework 7 [solution] Homework 8 [solution] Homework 9 [solution] Homework 10 [solution] Homework 11 [solution] Exams Midterm I Practice Midterm I [solution] Midterm I [solution] Midterm I alternate [solution] Midterm II Midterm II Practice Problems [solution] Practice Midterm II [solution] Review Session 1 2 Midterm II [solution] Midterm II Alternate [solution] Final Exam Final Exam Review Sessions 1 2 3 Practice Final [solution] Final Exam Solutions Quizzes Quiz 1 [solution] Quiz 2 [solution] Computational resources Instructions for the course Julia package (for performing matrix calculations).","tags":"","url":"/classes/math0520/"},
{"title":"Computation Resources for Linear Algebra Students","text":"Computation Resources for Linear Algebra Students I have made a package in Julia to help ease some of the more computationally tedious aspects of the course. Your use of this resource is optional, but I have attempted to make it as convenient as possible. Go to JuliaBox and login (you can use Google credentials, such as your Brown login) Select Julia 0.5.0 from the New pulldown menu in the top right Type Pkg.clone(git://github.com/sswatson/IntroLinearAlgebra.jl.git) into the first cell and type shift+enter to run it In the second cell type using IntroLinearAlgebra and type shift+enter to run it You're good to go! You can check out this tutorial notebook for examples you can copy and paste to get started. I have checked that that whole notebook runs smoothly on a fresh JuliaBox session. Since it intermingles installation with calculation; here's a cleaner one showing a example session after you have everything installed. If you don't want to have to visit juliabox.com, Julia is easy to install on your own computer. You'll also want to install the notebook interface IJulia, which is a bit less trivial but still doable. IJulia will still run in your browser, but it won't be connecting to the internet (the content is served on your own machine). <center> <img src=images/julia1.png style=width:600px> <img src=images/julia2.png style=width:600px> </center>","tags":"","url":"/classes/math0520/computation/"},
{"title":"Learning Resources for Math 520","text":"Learning Resources for Math 520 Class time. Come to class prepared to engage and ask questions. You will retain the material much better if it isn't totally unfamiliar the first time you see it in class. Textbook. The book is an excellent place to look for more detailed discussion and for more practice problems. Take time to read sections specified in the syllabus, even if only to get some familiarity with the content before we discuss it in class. 3Blue1Brown videos. 3Blue1Brown is the YouTube moniker of a person who has made some conceptually lucid and graphically stunning explanatory math videos, including a whole series on linear algebra. These videos are quite short and will provide you with some really valuable geometric intuition. These mental models are much more readily conveyed with the kinds of rich animation tools 3b1b is using. Highly recommended for everyone. Course notes. Both the course head and Isaac are posting handwritten notes for their classes. These presentations are streamlined to the point of being not very useful as an exclusive source, but you might find them helpful as a supplement. They are available on the main course website and on Isaac's section website. Cheat sheet. A list of each week's learning objectives, including a quick recap of the most important concepts, is available here. This document is helpful for refreshing your memory on the most important concepts before you tackle the homework, and it's also helpful for identifying examinable content. Homework. Complete each homework question with the goal of understanding it thoroughly. Reflect on the principles you used to solve the question, how you recognized which principles would be useful, and the bigger picture the problem is trying to illuminate. If you sense that there are some things you aren't completely grasping, please attend office hours or the MRC (see last two items below) for more conversation. Also note that your MyMathLab account includes access to learning materials beyond just the problems you're required to complete, including question-specific help. Quizzes. We will occasionally give you short quizzes to complete in class and self-assess. If you struggle to complete the quiz problems on time, take that as an indication that you should strive to learn the material more thoroughly while doing the homework. This might mean you need to solve additional problems. Office hours. The course staff members' office hours are listed on the course page, and any Math 520 student is welcome to attend anyone's office hours. You do not have to have any pressing needs to attend office hours: you are welcome to come to chat about the course or go over problems you feel you already mostly understand or whatever. Computer assistance. You will not benefit from doing every calculation by hand in this course. It is important to have enough facility with row reducing matrices, finding inverses, etc., to develop intuition about implications of these algorithms and to perform them correctly on an exam. However, when learning a new skill, it is a distraction from the key concepts if you have to do an inordinate amount of arithmetic every time you solve a problem. So, I suggest that you adopt some computational resource to help you work more efficiently. My top recommendation is the course Julia package, which was designed specifically for this purpose. It is a 5-minute, no-install, simple-instruction-following task to get up and running with this package in your browser, and it will help you save time and focus as you complete your homework and practice exercises. Your fellow students. Collaboration on solving homework problems is encouraged (though the final write-up must still be your own!), because you can learn a lot from working through problems with one another. Math Resource Center. The department provides learning support for a variety of undergraduate courses at Brown, including Math 520. Place & time: Foxboro Auditorium in the math department, 8 PM to 10 PM Monday through Thursday. Tutoring. The office of co-curricular advising offers free group/individual tutoring on a weekly basis, which you sign up for in advance. The department also has a list of graduate students available for private tutoring (though that tends to be expensive).","tags":"","url":"/classes/math0520/coursesuccess/"},
{"title":"no title","text":"","tags":"","url":"/classes/math0520/lecture_videos/"},
{"title":"Math 1610: Probability","text":"Math 1610: Probability Course documents Syllabus Course notes Course textbook Homework Homework 1 Homework 2 Homework 3 Homework 4 Homework 5 [solutions] Homework 6 [solutions] Homework 7 [solutions] Homework 8 [solutions] Homework 9 [solutions] Exams Exam 1 Solutions Julia The code used in this course will be written in Julia, a language designed for fast and interactive technical computing. Notebooks Buffon's Needle and Bertrand's Paradox (html) (Jupyter notebook) Birthday Problem and Binomial Probabilities (html) (Jupyter notebook) Stirling's Formula (html) (Jupyter notebook) Numerical Convolution (html) (Jupyter notebook) Topics Schedule Date Sections Topics 1 2015-09-10 1.2 Discrete probability distributions 2 2015-09-15 2.1 Simulation of continuous probabilities 3 2015-09-17 2.2 Continuous density functions 4 2015-09-22 3.1 Permutations 5 2015-09-24 3.2 Combinations 6 2015-09-29 4.1 Discrete conditional probability 7 2015-10-01 4.2,4.3 Continuous conditional probability, Paradoxes 8 2015-10-06 5.1 Important distributions 9 2015-10-08 5.2 Important densities 10 2015-10-13 6.1 Expected value 11 2015-10-15 Exam 12 2015-10-20 6.2 Variance of discrete random variables 13 2015-10-22 6.3,7.1 Expected value and variance of continuous random variables, Sums of discrete random variables 14 2015-10-27 7.2,8.1 Sums of continuous random variables, Law of large numbers (discrete) 15 2015-10-29 8.2 Law of large numbers (continuous) 16 2015-11-03 9.1 Bernoulli trials and the Central Limit Theorem 17 2015-11-05 9.2 CLT -- Discrete Independent Trials 18 2015-11-10 9.3 CLT -- Continuous Independent Trials 19 2015-11-12 10.1 Discrete distributions 20 2015-11-17 10.2 Branching processes 21 2015-11-19 10.3 Continuous densities 22 2015-11-24 11.2,11.3 Absorbing Markov chains, Ergodic Markov chains 23 2015-12-01 11.4 Fundamental limit theorem for Markov chains 24 2015-12-03 12.1 Random walks in Euclidean space","tags":"","url":"/classes/math1610/"},
{"title":"Buffon's Needle and Bertrand's Paradox¶","text":"","tags":"","url":"/classes/math1610/ipynb/buffon/"},
{"title":"no title","text":"","tags":"","url":"/classes/math1610/ipynb/numerical_convolution/"},
{"title":"no title","text":"","tags":"","url":"/classes/math1610/ipynb/permutations/"},
{"title":"Stirling's Formula and a hypothesis test¶","text":"","tags":"","url":"/classes/math1610/ipynb/stirling/"},
{"title":"Multivariable calculus recitation (MIT 18.022, Fall 2014) ","text":"Multivariable calculus recitation (MIT 18.022, Fall 2014) My section (R05) of MIT's multivariable calculus course 18.022 (course webpage) meets Mondays and Wednedays at 2:00 PM in the fall semester of 2014. Office hours are 3 PM to 4 PM on Monday and 4 PM to 5 PM on Wednesday. The handouts for the recitation are available below. Practice Final Exam Practice Final Exam Answers Handout Solutions Quiz Solutions 03 September 2014 [pdf] [tex] 08 September 2014 [pdf] [tex] [pdf] [tex] [pdf] [tex] [pdf] [tex] 10 September 2014 [pdf] [tex] [pdf] [tex] [pdf] [tex] [pdf] [tex] 15 September 2014 [pdf] [tex] [pdf] [tex] [pdf] [tex] [pdf] [tex] 17 September 2014 [pdf] [tex] [pdf] [tex] [pdf] [tex] [pdf] [tex] 22 September 2014 [pdf] [tex] [pdf] [tex] [pdf] [tex] [pdf] [tex] 24 September 2014 [pdf] [tex] [pdf] [tex] [pdf] [tex] [pdf] [tex] 29 September 2014 [pdf] [tex] [pdf] [tex] [pdf] [tex] [pdf] [tex] 01 October 2014 [pdf] [tex] [pdf] [tex] [pdf] [tex] [pdf] [tex] 06 October 2014 [pdf] [tex] [pdf] [tex] [pdf] [tex] [pdf] [tex] 08 October 2014 [pdf] [tex] [pdf] [tex] [pdf] [tex] [pdf] [tex] 15 October 2014 [pdf] [tex] [pdf] [tex] [pdf] [tex] [pdf] [tex] 20 October 2014 [pdf] [tex] [pdf] [tex] [pdf] [tex] [pdf] [tex] 22 October 2014 [pdf] [tex] [pdf] [tex] [pdf] [tex] [pdf] [tex] 27 October 2014 [pdf] [tex] [pdf] [tex] [pdf] [tex] [pdf] [tex] 29 October 2014 [pdf] [tex] [pdf] [tex] [pdf] [tex] [pdf] [tex] 03 November 2014 [pdf] [tex] [pdf] [tex] [pdf] [tex] [pdf] [tex] 05 November 2014 [pdf] [tex] [pdf] [tex] [pdf] [tex] [pdf] [tex] 12 November 2014 [pdf] [tex] [pdf] [tex] [pdf] [tex] [pdf] [tex] 17 November 2014 [pdf] [tex] [pdf] [tex] [pdf] [tex] [pdf] [tex] 19 November 2014 [pdf] [tex] [pdf] [tex] [pdf] [tex] [pdf] [tex] 24 November 2014 [pdf] [tex] [pdf] [tex] [pdf] [tex] [pdf] [tex] 26 November 2014 [pdf] [tex] [pdf] [tex] [pdf] [tex] [pdf] [tex] 01 December 2014 [pdf] [tex] [pdf] [tex] [pdf] [tex] [pdf] [tex] 03 December 2014 [pdf] [tex] [pdf] [tex] [pdf] [tex] [pdf] [tex] 08 December 2014 [pdf] [tex] [pdf] [tex] [pdf] [tex] [pdf] [tex] 10 December 2014 [pdf] [tex] [pdf] [tex] [pdf] [tex] [pdf] [tex] (figures for tex files above)","tags":"","url":"/classes/math18022/"},
{"title":"Cool Stuff","text":"Cool Stuff Data Science Software Languages Python. Most popular language for data science in industry. Also well-suited to application building. R. Most popular language among statisticians. Excellent focus on user experience, and lots of amazing tooling. Julia. A beautifully designed, fast, and increasingly popular language for data science and other scientific computing applications. My personal favorite. Packages Plotly. Beautiful, easy-to-make graphs for the web (both 2D and 3D). Very well integrated with Python, R, and Julia. Tidyverse. An opinionated but powerful collection of packages for doing data science in R. Esquisse. An R package for creating data visualizations quickly and beautifully, without code. Spark. Distributed computing framework, commonly used in industry. Applications Jupyter. Very popular notebook computing environment which supports many languages, including Julia, Python, and R. Pluto. Julia-specific alternative to Jupyter which is reactive (changing anything causes everything downstream of it to change too). ObservableHQ. Reactive notebooks specifically for Javascript. RStudio. Premier development environment for R. Can also be used for both Python and Julia. Superset. Open source data visualization dashboards. Websites Applications CoCalc. Cloud environment with excellent collaboration tools which supports practically every piece of open source scientific computing software. Colab. A Google-managed cloud Jupyter environment; Python-only and with slightly hackish support for collaboration, but it does include free GPU, which is important for deep learning and some other applications. NextJournal. Another free-GPU cloud Jupyter service. Books Introduction to Data Science in R. Superb online book written by Rafael Irizarry at Harvard. Community Kaggle. Datasets, problems, and contests. Content creation tools and utilities Prismia. Create and deploy interactive lessons. Desmos. A mathlet creation environment for everyone. math3d.org. Desmos, but in 3D. Really beautiful. JSXGraph. Create reactive mathlets (with code). What Prismia uses for its 2D mathlet system. Ipe. Desktop application for making precise 2D mathematical figures quickly (using a graphical user interface). TinyTeX. An easy-to-use distribution of LaTeX that does not take up a ton of hard drive space. MathPix. Snapshot math expressions or tables on your screen and convert them automatically to LaTeX (using optical character recognition). TextSniper. Like MathPix, but with plain text. For macOS. Keyboard Maestro. Automate tasks at the operating system level (e.g., scroll down 60 pixels and click, then repeat 100 times). Hopefully you don't need it often, but it's a lifesaver when you do. Copier. Templating system for quickly creating new files or projects on your computer (a Python package). Especially useful for software projects with boilerplate, stock letters, etc. ungit. A visual approach to version control. Solves a lot of Git's UX problems. Web development React. One of the most popular Javascript frameworks for creating web applications. It's the only one I know, but I do like it. Visual Studio Code. The development environment that all the cool kids are using these days. Firebase. An easy way to create a low-cost, scalable web application. Hosting, database, and cloud functions are all integrated and well documented. AG Grid. Possibly the best open source data table package for the web. Highly recommended over plain HTML for large tables. Learning Websites Art of Problem Solving. Premier math learning community for middle school and high school. Mathigon. Most polished, beautiful math lessons on the internet. Data Gymnasia. Data science content built on Mathigon technology. 3Blue1Brown. The best math videos on YouTube. Beautiful visualizations, original exposition, and excellent storytelling. Distill.pub. Visually stunning interactive articles on data science topics. Books Concrete Mathematics by Knuth, Graham, and Patashnik. Original, expertly crafted book on a variety of discrete math topics. Probability with Martingales by David Williams. Succinct probability textbook from the University of Cambridge (the one I learned basic probability from). Linear Algebra Done Right by Sheldon Axler. An expository masterpiece with an original and elegant take on basic linear algebra. Visual Complex Analysis by Tristan Needham. The title says it all. Personal Transportation Bike Friday. Really cool folding bicycles (better ride). Brompton. Really cool folding bicycles (more compact). Food Taza Chocolate. Amazing chocolate made locally in Somerville. Unique, slightly gritty texture (and dairy free). Entertainment xckd. Premier nerd comic on the web. Quora. Social media site built around the question-and-answer concept. Lots of excellent writers and a good algorithm for surfacing quality content. Meetup.com. Find folks in your area with common interests. Pocket. Browser extension and app for stashing articles you find and want to read later.","tags":"","url":"/coolstuff/"},
{"title":"Research","text":"Research My PhD research was on conformally invariant two-dimensional statistical physics models and their continuum scaling limits. My papers address problems related to percolation, conformal loop ensembles, and the Gaussian free field. If you're interested in learning about this field of research and you aren't a mathematician, please read this non-technical overview of the key idea which drives much of the current research in conformally invariant probability. It discusses why this idea is so compelling and how it has been mathematically fruitful (accounting for two recent Fields medals). Articles Rate of convergence for Cardy's formula. Communications in Mathematical Physics 329.1: 29-56. Joint work with Asaf Nachmias and Dana Mendelson, 2012 Extreme nesting in the conformal loop ensemble. The Annals of Probability 44.2 (2016): 1013-1052. Joint work with Jason Miller and David Wilson, 2013 The conformal loop ensemble nesting field. Probability Theory and Related Fields 163.3-4 (2015): 769-801. Joint work with Jason Miller and David Wilson, 2013 Fractional Gaussian fields: a survey. Probability Surveys 13 (2016): 1-56. Joint work with Asad Lodhia, Scott Sheffield and Xin Sun, 2014 Simple CLE in doubly connected domains. Annales de l'Institut Henri Poincaré, Probabilités et Statistiques Vol. 53. No. 2. Institut Henri Poincaré, 2017. Joint work with Scott Sheffield and Hao Wu, 2014 Schnyder woods, SLE(16), and Liouville quantum gravity. Joint work with Yiting Li and Xin Sun, 2017 Presentations MIT Probability Seminar, April 2018 University of Chicago probability seminar, February 2018 University of Connecticut analysis and probability seminar, May 2015 Columbia probability seminar, November 2014 Cornell probability seminar, September 2014 MIT probability seminar, September 2014 Les Diablerets, February 2014 Les Diablerets, February 2013 MIT probability seminar, March 2012","tags":"","url":"/research/"},
{"title":"Resume","text":"Resume PDF [PDF version]","tags":"","url":"/resume/"},
{"title":"Search","text":"Search","tags":"","url":"/search/"},
{"title":"Teaching","text":"Teaching Content The course webpages listed in the Courses section below are likely useful more for posterity than for identifying helpfully reusable material. I recommend starting here instead: Probability, Statistics, and Machine Learning: notebooks and videos Probability, Statistics, and Machine Learning: cheatsheet Multivariable Calculus book Notes on complex variables, differential equations, and Fourier series Notes on probability Courses DATA 1010 (math for data science) (Fall 2020) DATA 2040 (deep learning) (Spring 2019) DATA 1010 (math for data science) (Fall 2018) Math 0350 (multivariable calculus) at Brown (Fall 2017) Math 0520 (linear algebra) at Brown (Spring 2017) Math 0190 (calculus+complex+DE+Fourier) at Brown (Fall 2016) Math 1610 (probability) at Brown (Fall 2015) Recitation for 18.022 Multivariate Calculus at MIT (Fall 2014)","tags":"","url":"/teaching/"},
{"title":"Technology","text":"Technology Prismia Prismia is a full-featured learning platform with the following ambitions: significantly increase communication bandwidth between students and instructional staff during class make it easy to build genuinely reusable course components (lecture materials, assignments, exams, etc.) provide tools for rich, interactive visualizations minimize friction for both teachers and students The idea is that you build your lessons in Prismia as a sequence of messages to send to students. The messages may include rich text, images, interactive figures, or executable code (with Julia, Python, and R as the languages currently supported). Your lesson can then be deployed either in a live class or as an asynchronous learning activity: In the live-class deployment, you get the students' replies clustered based on content so you can quickly identify common themes and even respond on a group-by-group basis: Teaching a Prismia lesson is easier than teaching with slides because you're relieved of the cognitive burden of remembering the narration that the slides are designed to accompany. This makes Prismia lessons highly reusable and transferrable. In addition to live-class and asynchronous lessons, Prismia also has a message board and an assignments page with a really smooth and efficient grading interface: Prismia has accumulated many built-in conveniences to make life easier for instructors and students: multiple choice questions message starring and flagging sharing individual student messages with the class live summaries of the class's responses to a given question a variety of tools for coordinating responses from instructional staff to students during class an equation editor a drawing tool, with support for drawing questions (sketch a graph, circle the part of the figure..., etc.) scratch code cells for students summary reports and metrics on students' responses during class a system for marking certain messages as requiring a response plain-text or Jupyter export of lessons and assignments Jupyter assignment importing for students If you want to give Prismia a try, you can create a course at https://prismia.chat. You can always export any lessons you create, so you don't have to worry about lock-in. Example lessons Here are some places to look for example lessons and other Prismia content: The DATA 1010 class table, which contains lots of lessons on probability, statistics, and machine learning. The Winter R Course, which has 10 lessons (with accompanying videos). The Machine Learning with Mathlets showcase lesson. The Machine Learning Mathlet Gallery, which is a sequence of mathlets designed to illustrate various ideas in machine learning. The DATA 2040 class table, which contains lessons on deep learning (based on the D2L book and prepared by Google researcher Boqing Gong). Data Gymnasia Prior to the development of Prismia, I took advantage of Philipp Legner's amazing Mathigon platform to develop interactive data science content to help incoming students prepare for the DSI Master's Program. Mathigon has graciously agreed to host that material at https://mathigon.org/data-gymnasia. The content available on Data Gymnasia is still much more extensive than what has been built on Prismia, and the vision is very similar (with an emphasis on highly interactive, narrative-driven lessons). The courses include standard ones like Probability, Statistics, Machine Learning, Linear Algebra, Introductions to Julia and Python, etc., as well as some more novel ones like the Utilities course, which covers tools like Git, VS Code, and Docker. I recommend starting with Data Gymnasia if you're looking to learn, and Prismia if you're looking to create.","tags":"","url":"/technology/"}]};